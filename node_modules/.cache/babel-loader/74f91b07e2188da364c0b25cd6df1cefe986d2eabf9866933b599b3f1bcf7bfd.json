{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\poket\\\\src\\\\DeckPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DeckPage.css';\nimport fireTier1 from './assets/images/firetier1.png';\nimport fireTier2 from './assets/images/firetier2.png';\nimport fireTier3 from './assets/images/firetier3.png';\nimport fireTier4 from './assets/images/firetier4.png';\nimport fireTier5 from './assets/images/firetier5.png';\nimport fireTier6 from './assets/images/firetier6.png';\nimport waterTier1 from './assets/images/watertier1.png';\nimport waterTier2 from './assets/images/watertier2.png';\nimport waterTier3 from './assets/images/watertier3.png';\nimport waterTier4 from './assets/images/watertier4.png';\nimport waterTier5 from './assets/images/watertier5.png';\nimport waterTier6 from './assets/images/watertier6.png';\nimport forestTier1 from './assets/images/foresttier1.png';\nimport forestTier2 from './assets/images/foresttier2.png';\nimport forestTier3 from './assets/images/foresttier3.png';\nimport forestTier4 from './assets/images/foresttier4.png';\nimport forestTier5 from './assets/images/foresttier5.png';\nimport forestTier6 from './assets/images/foresttier6.png';\nimport legendTier1 from './assets/images/legendtier1.png';\nimport legendTier2 from './assets/images/legendtier2.png';\nimport legendTier3 from './assets/images/legendtier3.png';\nimport legendTier4 from './assets/images/legendtier4.png';\nimport legendTier5 from './assets/images/legendtier5.png';\nimport legendTier6 from './assets/images/legendtier6.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cards = [fireTier1, fireTier2, fireTier3, fireTier4, fireTier5, fireTier6, waterTier1, waterTier2, waterTier3, waterTier4, waterTier5, waterTier6, forestTier1, forestTier2, forestTier3, forestTier4, forestTier5, forestTier6, legendTier1, legendTier2, legendTier3, legendTier4, legendTier5, legendTier6];\nconst DeckPage = () => {\n  _s();\n  const [selectedCards, setSelectedCards] = useState([]);\n  const maxSelectedCards = 8;\n  const cards = [...imagePaths.fire, ...imagePaths.water, ...imagePaths.forest, ...imagePaths.legend];\n  const selectCard = card => {\n    if (selectedCards.length >= maxSelectedCards || selectedCards.includes(card)) return;\n    setSelectedCards([...selectedCards, card]);\n  };\n  const removeCard = index => {\n    const updatedCards = [...selectedCards];\n    updatedCards.splice(index, 1);\n    setSelectedCards(updatedCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deck-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"\\uB0B4 \\uB371 \\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-cards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-cards\",\n        children: Array.from({\n          length: maxSelectedCards\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-card\",\n          onClick: () => removeCard(index),\n          children: selectedCards[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedCards[index],\n            alt: `Selected ${index}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this) : `카드 ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card ${selectedCards.includes(card) ? 'disabled' : ''}`,\n        onClick: () => selectCard(card),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card,\n          alt: `Card ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DeckPage, \"WQPwK4XxS84lAQR2NjPmk0ptazQ=\");\n_c = DeckPage;\nexport default DeckPage;\nvar _c;\n$RefreshReg$(_c, \"DeckPage\");","map":{"version":3,"names":["React","useState","fireTier1","fireTier2","fireTier3","fireTier4","fireTier5","fireTier6","waterTier1","waterTier2","waterTier3","waterTier4","waterTier5","waterTier6","forestTier1","forestTier2","forestTier3","forestTier4","forestTier5","forestTier6","legendTier1","legendTier2","legendTier3","legendTier4","legendTier5","legendTier6","jsxDEV","_jsxDEV","cards","DeckPage","_s","selectedCards","setSelectedCards","maxSelectedCards","imagePaths","fire","water","forest","legend","selectCard","card","length","includes","removeCard","index","updatedCards","splice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","onClick","src","alt","map","_c","$RefreshReg$"],"sources":["C:/react/poket/src/DeckPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './DeckPage.css';\r\nimport fireTier1 from './assets/images/firetier1.png';\r\nimport fireTier2 from './assets/images/firetier2.png';\r\nimport fireTier3 from './assets/images/firetier3.png';\r\nimport fireTier4 from './assets/images/firetier4.png';\r\nimport fireTier5 from './assets/images/firetier5.png';\r\nimport fireTier6 from './assets/images/firetier6.png';\r\n\r\nimport waterTier1 from './assets/images/watertier1.png';\r\nimport waterTier2 from './assets/images/watertier2.png';\r\nimport waterTier3 from './assets/images/watertier3.png';\r\nimport waterTier4 from './assets/images/watertier4.png';\r\nimport waterTier5 from './assets/images/watertier5.png';\r\nimport waterTier6 from './assets/images/watertier6.png';\r\n\r\nimport forestTier1 from './assets/images/foresttier1.png';\r\nimport forestTier2 from './assets/images/foresttier2.png';\r\nimport forestTier3 from './assets/images/foresttier3.png';\r\nimport forestTier4 from './assets/images/foresttier4.png';\r\nimport forestTier5 from './assets/images/foresttier5.png';\r\nimport forestTier6 from './assets/images/foresttier6.png';\r\n\r\nimport legendTier1 from './assets/images/legendtier1.png';\r\nimport legendTier2 from './assets/images/legendtier2.png';\r\nimport legendTier3 from './assets/images/legendtier3.png';\r\nimport legendTier4 from './assets/images/legendtier4.png';\r\nimport legendTier5 from './assets/images/legendtier5.png';\r\nimport legendTier6 from './assets/images/legendtier6.png';\r\n\r\nconst cards = [\r\n    fireTier1, fireTier2, fireTier3, fireTier4, fireTier5, fireTier6,\r\n    waterTier1, waterTier2, waterTier3, waterTier4, waterTier5, waterTier6,\r\n    forestTier1, forestTier2, forestTier3, forestTier4, forestTier5, forestTier6,\r\n    legendTier1, legendTier2, legendTier3, legendTier4, legendTier5, legendTier6\r\n  ];\r\n  \r\nconst DeckPage = () => {\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  const maxSelectedCards = 8;\r\n  const cards = [\r\n    ...imagePaths.fire,\r\n    ...imagePaths.water,\r\n    ...imagePaths.forest,\r\n    ...imagePaths.legend\r\n  ];\r\n\r\n  const selectCard = (card) => {\r\n    if (selectedCards.length >= maxSelectedCards || selectedCards.includes(card)) return;\r\n    setSelectedCards([...selectedCards, card]);\r\n  };\r\n\r\n  const removeCard = (index) => {\r\n    const updatedCards = [...selectedCards];\r\n    updatedCards.splice(index, 1);\r\n    setSelectedCards(updatedCards);\r\n  };\r\n\r\n  return (\r\n    <div className=\"deck-page\">\r\n      <header className=\"header\">내 덱 설정</header>\r\n\r\n      <div className=\"selected-cards-container\">\r\n        <div className=\"selected-cards\">\r\n          {Array.from({ length: maxSelectedCards }, (_, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"selected-card\"\r\n              onClick={() => removeCard(index)}\r\n            >\r\n              {selectedCards[index] ? (\r\n                <img src={selectedCards[index]} alt={`Selected ${index}`} />\r\n              ) : (\r\n                `카드 ${index + 1}`\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-list\">\r\n        {cards.map((card, index) => (\r\n          <div\r\n            key={index}\r\n            className={`card ${selectedCards.includes(card) ? 'disabled' : ''}`}\r\n            onClick={() => selectCard(card)}\r\n          >\r\n            <img src={card} alt={`Card ${index}`} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}