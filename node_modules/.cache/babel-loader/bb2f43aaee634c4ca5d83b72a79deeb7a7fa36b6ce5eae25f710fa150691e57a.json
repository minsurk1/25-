{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\poketcard\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport logo from './assets/images/logo.png';\nimport MainPage from './MainPage'; // MainPage 컴포넌트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // 로그인 창 상태 (초기에는 닫힘)\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 여부\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"top-right-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), !isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-button open\",\n        onClick: () => setIsOpen(true),\n        children: \"\\uC5F4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `login-panel ${isOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Logo\",\n            className: \"login-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-button\",\n            onClick: () => {\n              setIsLoggedIn(true); // 로그인 상태 변경\n            },\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"signup-button\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-button close\",\n          onClick: () => setIsOpen(false),\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/main\",\n          element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFKST7Y5gg/yaPdhg4D8qvU+t2E=\");\n_c = App;\nfunction LoginPage() {\n  _s2();\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    navigate('/main'); // 로그인 후 MainPage로 이동\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s2(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LoginPage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","logo","MainPage","jsxDEV","_jsxDEV","App","_s","isOpen","setIsOpen","isLoggedIn","setIsLoggedIn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","type","placeholder","path","element","LoginPage","_c","_s2","navigate","handleLogin","_c2","$RefreshReg$"],"sources":["C:/react/poketcard/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport logo from './assets/images/logo.png';\nimport MainPage from './MainPage'; // MainPage 컴포넌트 추가\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false); // 로그인 창 상태 (초기에는 닫힘)\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 로그인 여부\n\n  return (\n    <Router> \n      <div className=\"App\">\n        {/* 풀스크린 배경 */}\n        <div className=\"fullscreen-background\"></div>\n\n        {/* 우측 상단 로고 */}\n        <img src={logo} alt=\"Logo\" className=\"top-right-logo\" />\n\n        {/* 열기 버튼 (닫힌 상태일 때만 보임) */}\n        {!isOpen && (\n          <button className=\"toggle-button open\" onClick={() => setIsOpen(true)}>\n            열기\n          </button>\n        )}\n\n        {/* 로그인 창 */}\n        <div className={`login-panel ${isOpen ? 'open' : ''}`}>\n          <div className=\"login-content\">\n            <img src={logo} alt=\"Logo\" className=\"login-logo\" />\n            <h2>로그인</h2>\n            <input type=\"text\" placeholder=\"아이디\" />\n            <input type=\"password\" placeholder=\"비밀번호\" />\n            <button\n              className=\"login-button\"\n              onClick={() => {\n                setIsLoggedIn(true);  // 로그인 상태 변경\n              }}\n            >\n              로그인\n            </button>\n            <button className=\"signup-button\">회원가입</button>\n          </div>\n\n          {/* 닫기 버튼 (로그인창이 열렸을 때만 보임) */}\n          {isOpen && (\n            <button className=\"toggle-button close\" onClick={() => setIsOpen(false)}>\n              닫기\n            </button>\n          )}\n        </div>\n\n        {/* 라우팅 설정 */}\n        <Routes>\n          <Route path=\"/main\" element={<MainPage />} />\n          {/* 기본 경로 설정 (로그인 페이지) */}\n          <Route path=\"/\" element={<LoginPage />} />\n        </Routes>\n      </div>\n    </Router> \n  );\n}\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    navigate('/main');  // 로그인 후 MainPage로 이동\n  };\n\n  return (\n    <div>\n      <h2>로그인 페이지</h2>\n      <button onClick={handleLogin}>로그인</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}