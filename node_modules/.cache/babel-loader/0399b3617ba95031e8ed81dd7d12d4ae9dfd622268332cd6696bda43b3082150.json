{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\poket\\\\src\\\\StorePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './StorePage.css';\nimport bCardImage from './assets/images/b_card.png';\nimport aCardImage from './assets/images/a_card.png';\nimport sCardImage from './assets/images/s_card.png';\n\n// 카드팩 데이터와 확률 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableCards = [{\n  name: \"파이리\",\n  type: \"fire\",\n  tier: 1,\n  image: require('./assets/images/firetier1.png')\n}, {\n  name: \"포니타\",\n  type: \"fire\",\n  tier: 2,\n  image: require('./assets/images/firetier2.png')\n}, {\n  name: \"꼬부기\",\n  type: \"water\",\n  tier: 1,\n  image: require('./assets/images/watertier1.png')\n}, {\n  name: \"고라파덕\",\n  type: \"water\",\n  tier: 2,\n  image: require('./assets/images/watertier2.png')\n}\n// 추가 카드 정의 가능\n];\nconst cardPackTypes = [{\n  name: \"카드 B\",\n  price: 10,\n  image: bCardImage,\n  probabilities: {\n    1: 0.7,\n    2: 0.3\n  }\n}, {\n  name: \"카드 A\",\n  price: 20,\n  image: aCardImage,\n  probabilities: {\n    1: 0.5,\n    2: 0.4,\n    3: 0.1\n  }\n}, {\n  name: \"카드 S\",\n  price: 30,\n  image: sCardImage,\n  probabilities: {\n    1: 0.3,\n    2: 0.4,\n    3: 0.2,\n    4: 0.1\n  }\n}];\nfunction StorePage({\n  currency,\n  setCurrency,\n  addCardsToInventory\n}) {\n  _s();\n  const navigate = useNavigate();\n\n  // 카드팩 구매 처리\n  const handleBuyCardPack = packType => {\n    if (currency < packType.price) {\n      alert(\"재화가 부족합니다.\");\n      return;\n    }\n\n    // 재화 차감\n    setCurrency(prev => prev - packType.price);\n\n    // 카드팩에서 카드 뽑기\n    const drawnCards = drawCardsFromPack(packType);\n\n    // 인벤토리에 카드 추가\n    addCardsToInventory(drawnCards);\n    alert(`${packType.name} 카드팩을 구매했습니다!`);\n  };\n\n  // 카드팩에서 확률에 따라 카드를 뽑는 함수\n  const drawCardsFromPack = packType => {\n    const drawnCards = [];\n    for (let i = 0; i < 5; i++) {\n      const randomTier = getRandomTier(packType.probabilities);\n      const availableTierCards = availableCards.filter(card => card.tier === randomTier);\n      if (availableTierCards.length > 0) {\n        const randomCard = availableTierCards[Math.floor(Math.random() * availableTierCards.length)];\n        drawnCards.push(randomCard);\n      }\n    }\n    return drawnCards;\n  };\n\n  // 확률에 기반한 티어 선택 함수\n  const getRandomTier = probabilities => {\n    const rand = Math.random();\n    let cumulative = 0;\n    for (const tier in probabilities) {\n      cumulative += probabilities[tier];\n      if (rand <= cumulative) {\n        return parseInt(tier);\n      }\n    }\n\n    // 기본적으로 가장 낮은 티어 반환 (예외 처리용)\n    return 1;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"store-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-display\",\n        children: [\"\\uBCF4\\uC720 \\uC7AC\\uD654: \", currency, \" G\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/inventory'),\n          className: \"button\",\n          children: \"\\uC778\\uBCA4\\uD1A0\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/main'),\n          className: \"button\",\n          children: \"\\uBA54\\uC778\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC0C1\\uC810\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-pack-container\",\n      children: cardPackTypes.map((pack, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-pack-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pack.image,\n          alt: pack.name,\n          className: \"card-pack-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pack.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [pack.price, \" G\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBuyCardPack(pack),\n          className: \"buy-button\",\n          children: \"\\uAD6C\\uB9E4\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(StorePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = StorePage;\nexport default StorePage;\nvar _c;\n$RefreshReg$(_c, \"StorePage\");","map":{"version":3,"names":["React","useState","useNavigate","bCardImage","aCardImage","sCardImage","jsxDEV","_jsxDEV","availableCards","name","type","tier","image","require","cardPackTypes","price","probabilities","StorePage","currency","setCurrency","addCardsToInventory","_s","navigate","handleBuyCardPack","packType","alert","prev","drawnCards","drawCardsFromPack","i","randomTier","getRandomTier","availableTierCards","filter","card","length","randomCard","Math","floor","random","push","rand","cumulative","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","pack","index","src","alt","_c","$RefreshReg$"],"sources":["C:/react/poket/src/StorePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './StorePage.css';\r\nimport bCardImage from './assets/images/b_card.png';\r\nimport aCardImage from './assets/images/a_card.png';\r\nimport sCardImage from './assets/images/s_card.png';\r\n\r\n// 카드팩 데이터와 확률 정의\r\nconst availableCards = [\r\n  { name: \"파이리\", type: \"fire\", tier: 1, image: require('./assets/images/firetier1.png') },\r\n  { name: \"포니타\", type: \"fire\", tier: 2, image: require('./assets/images/firetier2.png') },\r\n  { name: \"꼬부기\", type: \"water\", tier: 1, image: require('./assets/images/watertier1.png') },\r\n  { name: \"고라파덕\", type: \"water\", tier: 2, image: require('./assets/images/watertier2.png') },\r\n  // 추가 카드 정의 가능\r\n];\r\n\r\nconst cardPackTypes = [\r\n  { name: \"카드 B\", price: 10, image: bCardImage, probabilities: { 1: 0.7, 2: 0.3 } },\r\n  { name: \"카드 A\", price: 20, image: aCardImage, probabilities: { 1: 0.5, 2: 0.4, 3: 0.1 } },\r\n  { name: \"카드 S\", price: 30, image: sCardImage, probabilities: { 1: 0.3, 2: 0.4, 3: 0.2, 4: 0.1 } },\r\n];\r\n\r\nfunction StorePage({ currency, setCurrency, addCardsToInventory }) {\r\n  const navigate = useNavigate();\r\n\r\n  // 카드팩 구매 처리\r\n  const handleBuyCardPack = (packType) => {\r\n    if (currency < packType.price) {\r\n      alert(\"재화가 부족합니다.\");\r\n      return;\r\n    }\r\n\r\n    // 재화 차감\r\n    setCurrency((prev) => prev - packType.price);\r\n\r\n    // 카드팩에서 카드 뽑기\r\n    const drawnCards = drawCardsFromPack(packType);\r\n\r\n    // 인벤토리에 카드 추가\r\n    addCardsToInventory(drawnCards);\r\n\r\n    alert(`${packType.name} 카드팩을 구매했습니다!`);\r\n  };\r\n\r\n  // 카드팩에서 확률에 따라 카드를 뽑는 함수\r\n  const drawCardsFromPack = (packType) => {\r\n    const drawnCards = [];\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      const randomTier = getRandomTier(packType.probabilities);\r\n      const availableTierCards = availableCards.filter((card) => card.tier === randomTier);\r\n\r\n      if (availableTierCards.length > 0) {\r\n        const randomCard =\r\n          availableTierCards[Math.floor(Math.random() * availableTierCards.length)];\r\n        drawnCards.push(randomCard);\r\n      }\r\n    }\r\n\r\n    return drawnCards;\r\n  };\r\n\r\n  // 확률에 기반한 티어 선택 함수\r\n  const getRandomTier = (probabilities) => {\r\n    const rand = Math.random();\r\n    let cumulative = 0;\r\n\r\n    for (const tier in probabilities) {\r\n      cumulative += probabilities[tier];\r\n      if (rand <= cumulative) {\r\n        return parseInt(tier);\r\n      }\r\n    }\r\n\r\n    // 기본적으로 가장 낮은 티어 반환 (예외 처리용)\r\n    return 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"store-container\">\r\n      <header className=\"store-header\">\r\n        <div className=\"currency-display\">보유 재화: {currency} G</div>\r\n        <div className=\"navigation-buttons\">\r\n          <button onClick={() => navigate('/inventory')} className=\"button\">인벤토리</button>\r\n          <button onClick={() => navigate('/main')} className=\"button\">메인으로 돌아가기</button>\r\n        </div>\r\n      </header>\r\n\r\n      <h2>상점</h2>\r\n\r\n      <div className=\"card-pack-container\">\r\n        {cardPackTypes.map((pack, index) => (\r\n          <div key={index} className=\"card-pack-item\">\r\n            <img src={pack.image} alt={pack.name} className=\"card-pack-image\" />\r\n            <h3>{pack.name}</h3>\r\n            <p>{pack.price} G</p>\r\n            <button\r\n              onClick={() => handleBuyCardPack(pack)}\r\n              className=\"buy-button\"\r\n            >\r\n              구매하기\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StorePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}